// Objective-C API for talking to gamecenter.mobi/paicode/sdk/gamesdklib Go package.
//   gobind -lang=objc gamecenter.mobi/paicode/sdk/gamesdklib
//
// File is generated by gobind. Do not edit.

#ifndef __Gamesdklib_H__
#define __Gamesdklib_H__

@import Foundation;
#include "Universe.objc.h"


@class GamesdklibECPoint;
@class GamesdklibResponse;
@class GamesdklibResponseCodes;
@class GamesdklibRpcResponse;
@class GamesdklibSignData;
@class GamesdklibSignature;

@interface GamesdklibECPoint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSData*)x;
- (void)setX:(NSData*)v;
- (NSData*)y;
- (void)setY:(NSData*)v;
@end

/**
 * Response request result struct
 */
@interface GamesdklibResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)code;
- (void)setCode:(long)v;
- (NSString*)msg;
- (void)setMsg:(NSString*)v;
- (NSString*)data;
- (void)setData:(NSString*)v;
/**
 * String get a json string
 */
- (NSString*)string;
@end

@interface GamesdklibResponseCodes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)code;
- (void)setCode:(long)v;
- (NSString*)msg;
- (void)setMsg:(NSString*)v;
@end

@interface GamesdklibRpcResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)status;
- (void)setStatus:(NSString*)v;
// skipped field RpcResponse.Data with unsupported type: map[string]interface{}

- (NSData*)bytes:(NSError**)error;
@end

@interface GamesdklibSignData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
// skipped field SignData.Pk with unsupported type: *gamecenter.mobi/paicode/pkg/protos.PublicKey

- (NSString*)txt;
- (void)setTxt:(NSString*)v;
- (NSString*)signtxt;
- (void)setSigntxt:(NSString*)v;
@end

@interface GamesdklibSignature : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
// skipped field Signature.P with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.ECPoint

@end

@interface Gamesdklib : NSObject
// skipped variable ErrAccountAlreadyExist with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrAddressNotExist with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrAssetActionFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrAssetNofound with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrConfigParseFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrDeleteAccountFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrDumpPrivateKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrErc721Config with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrErc721Disabled with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrGeneratePrivateKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrGetAllPrivateKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrGetPublicKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrImportPrivateKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrInitRpcFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrInitWalletFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrMissParam with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrPayloadParseFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrPrivateKeyDecodeFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrPrivateKeySignFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrQueryChainFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

/**
 * Err
 */
+ (NSError*) errRPCConn;
+ (void) setErrRPCConn:(NSError*)v;

// skipped variable ErrRegisterFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrSetPrivateKeyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrSignKeyVerifyFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrTransferFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrUserDataParseFail with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

// skipped variable ErrUserNofound with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

+ (NSString*) securityPolicyUser;
+ (void) setSecurityPolicyUser:(NSString*)v;

// skipped variable SuccessResponse with unsupported type: gamecenter.mobi/paicode/sdk/gamesdklib.Response

@end

FOUNDATION_EXPORT NSString* GamesdklibCreateAccountReturnAddr(NSString* id_);

/**
 * CreateAccout create a acc
 */
FOUNDATION_EXPORT NSString* GamesdklibCreateAccout(NSString* id_, NSString* privateKeySting);

/**
 * DeleteAccount delete acc
 */
FOUNDATION_EXPORT NSString* GamesdklibDeleteAccount(NSString* id_);

/**
 * DumpAcc export acc
 */
FOUNDATION_EXPORT NSString* GamesdklibDumpAccount(NSString* id_);

FOUNDATION_EXPORT NSString* GamesdklibErc721Asset(NSString* from, NSString* to, NSString* asset, NSString* msg);

FOUNDATION_EXPORT NSString* GamesdklibErc721QueryAsset(NSString* asset);

/**
 * erc721 rpc service: QueryChain
 */
FOUNDATION_EXPORT NSString* GamesdklibErc721QueryChain(NSString* address);

/**
 * Erc721QueryUser get a user info by wallet address
 */
FOUNDATION_EXPORT NSString* GamesdklibErc721QueryUser(NSString* addr);

/**
 * erc721 rpc service:Register
 */
FOUNDATION_EXPORT NSString* GamesdklibErc721Register(NSString* id_);

/**
 * erc721 rpc service:Transfer
 */
FOUNDATION_EXPORT NSString* GamesdklibErc721Transfer(NSString* from, NSString* to, NSString* asset, NSString* message);

/**
 * GetAllPrivateKey get key list data
 */
FOUNDATION_EXPORT NSString* GamesdklibGetAllPrivateKey(void);

FOUNDATION_EXPORT NSString* GamesdklibGetErc721ChaincodeName(void);

FOUNDATION_EXPORT NSString* GamesdklibInit(NSString* configString);

FOUNDATION_EXPORT NSString* GamesdklibParsePayload(NSString* payload);

/**
 * QueryAcc  get acc
 */
FOUNDATION_EXPORT NSString* GamesdklibQueryAccount(NSString* id_);

/**
 * fabric rpc service: QueryChain
 */
FOUNDATION_EXPORT NSString* GamesdklibQueryChain(NSString* addr);

/**
 * QueryUser get a user info by wallet address
fabric rpc service:QueryUser
 */
FOUNDATION_EXPORT NSString* GamesdklibQueryUser(NSString* addr);

/**
 * fabric rpc service:Register
 */
FOUNDATION_EXPORT NSString* GamesdklibRegister(NSString* id_);

/**
 * SignKeys sign key
 */
FOUNDATION_EXPORT NSString* GamesdklibSignKeys(NSString* id_, NSString* strs);

/**
 * fabric rpc service:Transfer
 */
FOUNDATION_EXPORT NSString* GamesdklibTransfer(NSString* from, NSString* to, NSString* amount, NSString* msg);

FOUNDATION_EXPORT NSString* GamesdklibVerifyAddress(NSString* address);

/**
 * VerifyAddressWithID
 */
FOUNDATION_EXPORT NSString* GamesdklibVerifyAddressWithID(NSString* address);

/**
 * VerifyKey check sign key
 */
FOUNDATION_EXPORT NSString* GamesdklibVerifyKey(NSString* msg);

#endif
